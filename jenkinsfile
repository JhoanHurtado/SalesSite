pipeline {
        agent any
    parameters {
            string(name: 'name_container', defaultValue: 'salessiteweb', description: 'nombre del contenedor')
            string(name: 'name_imagen', defaultValue: 'salessiteweb', description: 'nombre de la image')
            string(name: 'tag_imagen', defaultValue: 'latest', description: 'etiqueta de la imagen')
            string(name: 'puerto_imagen', defaultValue: '4550', description: 'puerto a publicar')
        }
        environment{
            name_final = "${name_container}${tag_imagen}${puerto_imagen}"
        }
        stages{
            stage('stop/rm'){
                when{
                    expression{
                        DOCKER_EXIST = sh(returnStdout: true, script: 'echo "$(docker ps -q --filter name=${name_final})"')
                        return DOCKER_EXIST != ''
                    }
                }
                steps {
                    script{
                        sh '''
                            docker stop ${name_final}
                        '''
                }
            }
        }
        stage('build'){
            steps{
                script{
                    sh '''  
                    docker image build -t ${name_imagen}:${tag_imagen} -f ./SalesSite.Web/Dockerfile .
                    '''
                }
                                post{
                        always{
                        echo "${name_imagen}:${tag_imagen}"
                        }
                }
            }
        }
        stage('run'){
            steps{
                script{
                    sh'''
                    docker container run --name ${name_final} -d -p ${puerto_imagen}:80 ${name_imagen}:${tag_imagen}
                    '''
                }
            }
        }
    }
}

// pipeline{
//     agent{
//         label "node"
//     }
//     stages{
//         stage("A"){
//             steps{
//                 echo "========executing A========"
//             }
//             post{
//                 always{
//                     echo "========always========"
//                 }
//                 success{
//                     echo "========A executed successfully========"
//                 }
//                 failure{
//                     echo "========A execution failed========"
//                 }
//             }
//         }
//     }
//     post{
//         always{
//             echo "========always========"
//         }
//         success{
//             echo "========pipeline executed successfully ========"
//         }
//         failure{
//             echo "========pipeline execution failed========"
//         }
//     }
// }
