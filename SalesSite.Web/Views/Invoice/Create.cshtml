@model SalesSite.Web.Dtos.InvoiceModelDto

@{
    ViewData["Title"] = "Sales";
}

<h1>Sales</h1>

<h4>Sale Information</h4>
<hr />
<div class="row">
    <div class="col-md-12">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group col-md-12 col-lg-12 col-sm-12">
                <label asp-for="invoiceDto.BuyDate" class="control-label"></label>
                <input asp-for="invoiceDto.BuyDate" class="form-control" disabled/>
                <span asp-validation-for="invoiceDto.BuyDate" class="text-danger"></span>
            </div>
            <div class="row-inputs">
                <div col-md-12 col-lg-12 col-sm-12>
                   <div class="form-group">
                        <label asp-for="invoiceDto.Total" class="control-label"></label>
                        <input asp-for="invoiceDto.Total" class="form-control" id="Total" disabled/>
                        <span asp-validation-for="invoiceDto.Total" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="invoiceDto.TotalProducts" class="control-label"></label>
                        <input asp-for="invoiceDto.TotalProducts" class="form-control" id="TotalProducts" disabled/>
                        <span asp-validation-for="invoiceDto.TotalProducts" class="text-danger"></span>
                    </div>
                </div>
                <div col-md-12 col-lg-12 col-sm-12>
                    <div class="form-group">
                        <label asp-for="invoiceDto.ClientId" class="control-label"></label>
                          <select asp-for="invoiceDto.ClientId" asp-items="@Model.clientDtos" class="form-control" id="clientId"></select>
                        <span asp-validation-for="invoiceDto.ClientId" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="invoiceDto.UserId" class="control-label"></label>
                        <input asp-for="invoiceDto.UserId" class="form-control" id="UserId" disabled value="1"/>
                        <span asp-validation-for="invoiceDto.UserId" class="text-danger"></span>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<div>
    <table class="table" style="max-height: 300px;">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.productDtos.FirstOrDefault().Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.productDtos.FirstOrDefault().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.productDtos.FirstOrDefault().UnitValue)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.productDtos) {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        $@Html.DisplayFor(modelItem => item.UnitValue)
                    </td>
                    <td>
                        <input type="button" value="Add" onclick=" addTOinvoice('@item.Id','@item.Name','@item.UnitValue')" class="btn btn-secondary" />
                    </td>
                </tr>
        }
    </tbody>
</table>
</div>

<div>
    <h4>Products added to the invoice</h4>
    <table class="table">
    <thead>
        <tr>
            <th>
                Product
            </th>
            <th>
                Unit Value
            </th>
            <th>
                Amount
            </th>
            <th>
                Total
            </th>
        </tr>
    </thead>
    <tbody id="tbodyFill">

    </tbody>
</table>
    <input id="sendSale" type="button" value="Sell" class="btn btn-outline-secondary" />
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script >
         var productsFact = [];
        var totalProducts = 0;
        var total = 0;

        $(function() {
            $("#sendSale").click(function() {
                var ClientId = $("#clientId").val();
                var Total = $("#Total").val();
                var UserId = $("#UserId").val();
                var TotalProducts = $("#TotalProducts").val();


                var invoice = { ClientId: ClientId, Total: Total, UserId: UserId, TotalProducts: TotalProducts }

                console.log(invoice);

                var url ="@Url.Action("Create","Invoice")"
                $.post(url, invoice).done(function(data) {
                    console.log(data);
                    if (data != null) {
                        for (i = 0; i < productsFact.length; i++) {
                            productsFact[i].InvoiceId = JSON.parse(data).Id;
                            $.post("@Url.Action("Create","InvoiceDetail")", productsFact[i]).done(function(data) {
                                window.location.replace("https://localhost:7197/Invoice");

                            }).fail(errr).always(function() {

                            });
                        }
                    }
                }).fail(errr).always(function() {

                });
            });

            function errr(err) {
                console.log(err);
            }

        })

        function addTOinvoice(id, name, unitValue) {

            amoun = 1;

            if (productsFact.length == 0) {
                productsFact.push({ ProducId: id, Name: name, UnitValue: unitValue, Amount: amoun, TotalProduct: parseInt(unitValue) });
            } else {
                var contains = true;
                for (i = 0; i < productsFact.length; i++) {
                    if (productsFact[i].ProducId == id) {
                        productsFact[i].Amount = productsFact[i].Amount + 1;
                        productsFact[i].TotalProduct = (parseInt(unitValue) * productsFact[i].Amount);
                        contains = true;
                        break;
                    } else {
                        contains = false;

                    }
                }
                if(!contains) productsFact.push({ ProducId: id, Name: name, UnitValue: unitValue, Amount: amoun, TotalProduct: parseInt(unitValue) });    
            }
        
            $("#tbodyFill").empty();
            totalProducts = 0;
            total = 0;
             for (i = 0; i < productsFact.length; i++) {
                 totalProducts += productsFact[i].TotalProduct;
                 total += productsFact[i].Amount;
                 $("#Total").val(total);
                 $("#TotalProducts").val(totalProducts);
                 var row = '<tr><td>' + productsFact[i].Name + '</td><td>' + productsFact[i].UnitValue + '</td><td>'+productsFact[i].Amount+'</td><td>' + productsFact[i].TotalProduct + '</td></tr>';
                 $("#tbodyFill").append(row);
             }
         }
    </script>
    
}

